/**************************
 *Program 2: Baccarat game - BaccaratGameLogic.java
 This file contains the logic behind the game baccarat, such as when players can draw cards, when does someone win the game
 and how the hands total is calculated

 Course: CS 342, Fall 2023.
 System: Windows using Intellij
 Starter Code Author: Mark Hallenbeck
 Student Authors: Adrian Lopez, Ihsaan Bijapuri
 *
 *************************/
import java.util.ArrayList;

public class BaccaratGameLogic {
    // whoWon returns who won the game of baccarat based on how much their hand evaluated to, whoever is close to 9 wins, and if the values are equal then it is a draw
    public String whoWon(ArrayList<Card> hand1, ArrayList<Card> hand2) {
        int playerTotal = handTotal(hand1);
        int bankerTotal = handTotal(hand2);
        if (playerTotal == bankerTotal) {
            return "Draw.";
        } else if (playerTotal > bankerTotal) {
            return "Player.";
        } else if (playerTotal == 0) {
            return "Player.";
        } else {
            return "Banker.";
        }
    }
    // handTotal - calculates the hand total of a hand, if the value is over 10 then the 1 is dropped off, for example 16 evaluates to a total of 6
    public int handTotal(ArrayList<Card> hand) {
        if (hand.isEmpty())
            return 0; // empty hand
        int total = 0;
        for (int i = 0; i < hand.size(); i++) {
            total += hand.get(i).value >= 10 ? 0 : hand.get(i).value;
        }
        return total % 10; // adds hand together
    }
    // evaluateBankerDraw - evaluates when a banker can draw, depends on whether the player drew during the course of the game and what card they drew
    public boolean evaluateBankerDraw(ArrayList<Card> hand, Card playerCard) {
        int total = handTotal(hand);

        if (playerCard != null) {
            if ((playerCard.value >= 10 || playerCard.value == 1) && total <= 3) {
                return true;
            }
            if ((playerCard.value == 2 || playerCard.value == 3) && total <= 4) {
                return true;
            }
            if ((playerCard.value == 4 || playerCard.value == 5) && total <= 5) {
                return true;
            }
            if ((playerCard.value == 6 || playerCard.value == 7) && total <= 6) {
                return true;
            }
            if (playerCard.value == 8 && total <= 2) {
                return true;
            }
            if (playerCard.value == 9 && total <= 3) {
                return true;
            }
        } else {
            if (total <= 5) {
                return true;
            }
        }

        return false;
    }

    // evaluatePlayerDraw - evaluates when a player can draw, player can draw depending on their hand total and nothing else
    public boolean evaluatePlayerDraw(ArrayList<Card> hand) {
        int total = handTotal(hand);
        if (total <= 5) {
            return true;
        }
        return false;
    }
}
